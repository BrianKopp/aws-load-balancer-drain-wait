---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aws-load-balancer-drain-wait
  namespace: drain-waiter
  annotations:
    eks.amazonaws.com/role-arn: your-role-arn # CHANGE ME
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aws-load-balancer-drain-wait
rules:
- apiGroups: ["networking.k8s.io/v1"]
  resources: ["ingresses"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aws-load-balancer-drain-wait
subjects:
- kind: ServiceAccount
  name: aws-load-balancer-drain-wait
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  name: aws-load-balancer-drain-wait
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-load-balancer-drain-wait
  namespace: default
  labels:
    app: aws-load-balancer-drain-wait
    component: drain-waiter
spec:
  replicas: 3
  selector:
    matchLabels:
      app: aws-load-balancer-drain-wait
      component: drain-waiter
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: aws-load-balancer-drain-wait
        component: drain-waiter
    spec:
      containers:
      - name: drainwait
        image: briankopp/aws-load-balancer-drain-wait:0.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            schema: HTTP
          initialDelaySeconds: 3
          periodSeconds: 3
          timeoutSeconds: 1
          successThreshold: 2
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            schema: HTTP
          initialDelaySeconds: 3
          periodSeconds: 3
          timeoutSeconds: 1
          successThreshold: 2
          failureThreshold: 3
      serviceAccount: aws-load-balancer-drain-wait
      serviceAccountName: aws-load-balancer-drain-wait
      terminationGracePeriodSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: aws-load-balancer-drain-wait
  namespace: default
  labels:
    app: aws-load-balancer-drain-wait
    component: drain-waiter-service
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: aws-load-balancer-drain-wait
    component: drain-waiter
